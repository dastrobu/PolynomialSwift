{"Extensions/Array.html#/scal(_:offset:)":{"name":"scal(_:offset:)","abstract":"<p>Multiplies each element of a vector by a constant.","parent_name":"Array"},"Extensions/Array.html#/scal(n:alpha:incX:offset:)":{"name":"scal(n:alpha:incX:offset:)","abstract":"<p>Multiplies each element of a vector by a constant.","parent_name":"Array"},"Extensions/Array.html#/set(_:offset:)":{"name":"set(_:offset:)","abstract":"<p>Modifies a vector in place, setting each element to a given value.","parent_name":"Array"},"Extensions/Array.html#/set(n:alpha:incX:offset:)":{"name":"set(n:alpha:incX:offset:)","abstract":"<p>Modifies a vector in place, setting each element to a given value.","parent_name":"Array"},"Extensions/Array.html#/getrf(m:n:)":{"name":"getrf(m:n:)","abstract":"<p>SGETRF computes an LU factorization of a general M-by-N matrix A","parent_name":"Array"},"Extensions/Array.html#/getrf(m:n:ipiv:)":{"name":"getrf(m:n:ipiv:)","abstract":"<p>SGETRF computes an LU factorization of a general M-by-N matrix A","parent_name":"Array"},"Extensions/Array.html#/getri()":{"name":"getri()","abstract":"<p>SGETRI computes the inverse of a matrix using the LU factorization","parent_name":"Array"},"Extensions/Array.html#/gesv(B:)":{"name":"gesv(B:)","abstract":"<p>DGESV computes the solution to a real system of linear equations","parent_name":"Array"},"Extensions/Array.html#/gesv(ipiv:B:)":{"name":"gesv(ipiv:B:)","abstract":"<p>SGESV computes the solution to a real system of linear equations","parent_name":"Array"},"Extensions/Array.html#/gtsv(nrhs:dl:du:B:)":{"name":"gtsv(nrhs:dl:du:B:)","abstract":"<p>SGTSV  solves the equation</p>","parent_name":"Array"},"Extensions/Array.html#/init(start:stop:step:)":{"name":"init(start:stop:step:)","abstract":"<p>Build ramped vector","parent_name":"Array"},"Extensions/Array.html#/init(start:step:n:)":{"name":"init(start:step:n:)","abstract":"<p>Build ramped vector","parent_name":"Array"},"Extensions/Array.html#/mtrans(m:n:)":{"name":"mtrans(m:n:)","abstract":"<p>Creates a transposed matrix C from a source matrix A.","parent_name":"Array"},"Extensions/Array.html#/mtrans(strideA:C:strideC:m:n:)":{"name":"mtrans(strideA:C:strideC:m:n:)","abstract":"<p>Creates a transposed matrix C from a source matrix A.","parent_name":"Array"},"Extensions/Array.html#/mmul(B:strideB:m:n:p:)":{"name":"mmul(B:strideB:m:n:p:)","abstract":"<p>Performs an out-of-place multiplication of two matrices.","parent_name":"Array"},"Extensions/Array.html#/mmul(strideA:B:strideB:C:strideC:m:n:p:)":{"name":"mmul(strideA:B:strideB:C:strideC:m:n:p:)","abstract":"<p>Performs an out-of-place multiplication of two matrices.","parent_name":"Array"},"Extensions/Array.html#/vpoly(_:)":{"name":"vpoly(_:)","abstract":"<p>Vector polynomial evaluation.","parent_name":"Array"},"Extensions/Array.html#/vpoly(strideA:b:strideB:)":{"name":"vpoly(strideA:b:strideB:)","abstract":"<p>Vector polynomial evaluation.","parent_name":"Array"},"Extensions/Array.html#/vpoly(strideA:b:strideB:c:strideC:)":{"name":"vpoly(strideA:b:strideB:c:strideC:)","abstract":"<p>Vector polynomial evaluation.","parent_name":"Array"},"Extensions/Array.html":{"name":"Array","abstract":"<p>Array extension employing the BLAS framework."},"Enums/LapackError.html#/getrf(_:)":{"name":"getrf(_:)","parent_name":"LapackError"},"Enums/LapackError.html#/getri(_:)":{"name":"getri(_:)","parent_name":"LapackError"},"Enums/LapackError.html#/dgesv(_:)":{"name":"dgesv(_:)","parent_name":"LapackError"},"Enums/LapackError.html":{"name":"LapackError","abstract":"<p>This wrapper calls the lapack functions from Accelerate."},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"}}